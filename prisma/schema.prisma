
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  String   @id @default(uuid())
  fullName            String
  email               String   @unique
  phone               String   @unique
  password            String
  isAdmin             Boolean  @default(false)
  bvn                 String?  @default("not_set")
  bankAccount         String?  @default("not_set")
  idType              String   @default("NIN")
  isEmailVerified     Boolean  @default(false)
  kycStatus           String   @default("pending")
  isFlagged           Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  loans               Loan[]   @relation("UserLoans")
  passwordResetTokens PasswordResetToken[]
  emailVerifications  EmailVerificationToken[]
  refreshTokens       RefreshToken[]
}

model Loan {
  id               String    @id @default(uuid())
  userId           String
  amount           Float
  vendor           String
  loanType         String
  repaymentType    String
  interestRate     Float
  duration         Int
  purpose          String?
  status           String    @default("pending")
  approvalDate     DateTime?
  repaymentDate    DateTime?
  category         String
  user             User      @relation(name: "UserLoans", fields: [userId], references: [id])
  createdAt        DateTime  @default(now())
  remainingBalance Float     @default(0)

  // Reverse relation to LoanRepayment
  loanRepayments   LoanRepayment[] @relation("LoanRepayments")
}

model PasswordResetToken {
  token      String   @id
  userId     String
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
}

model EmailVerificationToken {
  token      String   @id
  userId     String
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @unique
  userId     String
  createdAt  DateTime @default(now())
  expiresAt  DateTime

  user       User     @relation(fields: [userId], references: [id])
}

model LoanRepayment {
  id             String   @id @default(cuid())
  amount         Float
  loanId         String
  repaymentDate  DateTime
  loan           Loan     @relation(fields: [loanId], references: [id], name: "LoanRepayments")
}
